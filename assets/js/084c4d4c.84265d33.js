"use strict";(self.webpackChunkappcircle_docusaurus=self.webpackChunkappcircle_docusaurus||[]).push([[73199],{89751:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"workflows/ios-specific-workflow-steps/xcodebuild-for-devices","title":"Xcodebuild for Devices (Archive & Export)","description":"Learn to build iOS apps for ARM devices with Xcodebuild. Essential for Sharing With Testers feature and iOS distribution","source":"@site/docs/workflows/ios-specific-workflow-steps/xcodebuild-for-devices.md","sourceDirName":"workflows/ios-specific-workflow-steps","slug":"/workflows/ios-specific-workflow-steps/xcodebuild-for-devices","permalink":"/workflows/ios-specific-workflow-steps/xcodebuild-for-devices","draft":false,"unlisted":false,"editUrl":"https://github.com/appcircleio/appcircle-docusaurus/tree/master/docs/workflows/ios-specific-workflow-steps/xcodebuild-for-devices.md","tags":[{"inline":false,"label":"xcode","permalink":"/tags/xcode","description":"Description for xcode"},{"inline":false,"label":"ios","permalink":"/tags/ios","description":"Description for ios"},{"inline":false,"label":"build","permalink":"/tags/build","description":"Description for build"},{"inline":false,"label":"archive","permalink":"/tags/archive","description":"Description for archive"},{"inline":false,"label":"export","permalink":"/tags/export","description":"Description for export"},{"inline":false,"label":"workflow","permalink":"/tags/workflow","description":"Description for workflow"},{"inline":false,"label":"step","permalink":"/tags/step","description":"Description for step"}],"version":"current","frontMatter":{"title":"Xcodebuild for Devices (Archive & Export)","description":"Learn to build iOS apps for ARM devices with Xcodebuild. Essential for Sharing With Testers feature and iOS distribution","tags":["xcode","ios","build","archive","export","workflow","step"]},"sidebar":"mySidebar","previous":{"title":"Xcode Select","permalink":"/workflows/ios-specific-workflow-steps/xcode-select"},"next":{"title":"Xcodebuild for iOS Simulator","permalink":"/workflows/ios-specific-workflow-steps/xcodebuild-for-ios-simulator"}}');var t=s(74848),n=s(28453),o=s(69678);const d={title:"Xcodebuild for Devices (Archive & Export)",description:"Learn to build iOS apps for ARM devices with Xcodebuild. Essential for Sharing With Testers feature and iOS distribution",tags:["xcode","ios","build","archive","export","workflow","step"]},c="Xcodebuild for Devices (Archive & Export)",l={},a=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Input Variables",id:"input-variables",level:3},{value:"Output Variables",id:"output-variables",level:3},{value:"FAQ",id:"faq",level:2},{value:"Adding Additional Command to Xcodebuild for Devices Step",id:"adding-additional-command-to-xcodebuild-for-devices-step",level:3},{value:"For Example",id:"for-example",level:4}];function h(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components},{ExternalUrlRef:s}=i;return s||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ExternalUrlRef",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"xcodebuild-for-devices-archive--export",children:"Xcodebuild for Devices (Archive & Export)"})}),"\n",(0,t.jsxs)(i.p,{children:["This step builds your application for iOS devices in ARM architecture, which is required for the ",(0,t.jsx)(i.a,{href:"/testing-distribution/create-or-select-a-distribution-profile",children:(0,t.jsx)(i.strong,{children:"Sharing With Testers"})})," feature or any other means of iOS distribution."]}),"\n",(0,t.jsx)(i.admonition,{type:"info",children:(0,t.jsxs)(i.p,{children:["This step is the archive and export step. When the step is completed, the ",(0,t.jsx)(i.code,{children:".ipa"})," file of the application is generated."]})}),"\n",(0,t.jsx)(i.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(i.p,{children:["Before running the ",(0,t.jsx)(i.strong,{children:"Xcodebuild for Devices"})," step, you must complete certain prerequisites, as detailed in the table below:"]}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Require Workflow Step"}),(0,t.jsx)(i.th,{children:"Description"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"/workflows/common-workflow-steps/git-clone",children:(0,t.jsx)(i.strong,{children:"Git Clone"})})}),(0,t.jsxs)(i.td,{children:["The repository that needs to be built must be fetched from the Git provider. ",(0,t.jsx)(i.strong,{children:"Xcodebuild for Devices"})," should be used after this step."]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"/workflows/ios-specific-workflow-steps/xcode-select",children:(0,t.jsx)(i.strong,{children:"Xcode Select"})})}),(0,t.jsxs)(i.td,{children:["In this step, select the Xcode version to build. ",(0,t.jsx)(i.strong,{children:"Xcodebuild for Devices"})," should be used after this step."]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.a,{href:"/workflows/ios-specific-workflow-steps/cocoapods-install",children:(0,t.jsx)(i.strong,{children:"Cocoapods Install"})})}),(0,t.jsxs)(i.td,{children:["This step installs all pod dependencies for project. ",(0,t.jsx)(i.strong,{children:"Xcodebuild for Devices"})," should be used after this step. If you use SPM (Swift Package Manager), it is not necessary to use."]})]})]})]}),"\n",(0,t.jsxs)(i.admonition,{type:"danger",children:[(0,t.jsxs)(i.p,{children:["This step should always follow steps that may affect Archive and Export, such as ",(0,t.jsx)(i.strong,{children:"Xcode Select"})," and ",(0,t.jsx)(i.strong,{children:"Cocoapods Install"}),"."]}),(0,t.jsx)(o.A,{url:"https://cdn.appcircle.io/docs/assets/BE2880-buildOrder.png"})]}),"\n",(0,t.jsx)(i.h3,{id:"input-variables",children:"Input Variables"}),"\n",(0,t.jsx)(i.p,{children:"This step contains some input variable(s). It needs these variable(s) to work. The table below gives explanation for this variable(s)."}),"\n",(0,t.jsx)(o.A,{url:"https://cdn.appcircle.io/docs/assets/BE2880-buildInput.png"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Variable Name"}),(0,t.jsx)(i.th,{children:"Description"}),(0,t.jsx)(i.th,{children:"Status"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_REPOSITORY_DIR"})}),(0,t.jsxs)(i.td,{children:["Specifies the cloned repository directory. This path will be generated after the ",(0,t.jsx)(i.a,{href:"/workflows/common-workflow-steps/git-clone",children:(0,t.jsx)(i.strong,{children:"Git Clone"})})," step."]}),(0,t.jsx)(i.td,{children:"Required"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_OUTPUT_DIR_PATH"})}),(0,t.jsx)(i.td,{children:"This variable specifies the path of the artifacts that will be generated after the build is complete."}),(0,t.jsx)(i.td,{children:"Required"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_SCHEME"})}),(0,t.jsxs)(i.td,{children:["Specifies the project scheme for build. If you filled in ",(0,t.jsx)(i.strong,{children:(0,t.jsx)(i.code,{children:"Configuration => Build Scheme"})}),", this variable comes from ",(0,t.jsx)(i.a,{href:"/build/platform-build-guides/building-ios-applications#build-configuration",children:"Configuration"}),"."]}),(0,t.jsx)(i.td,{children:"Required"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_ARCHIVE_FLAGS"})}),(0,t.jsxs)(i.td,{children:["Specifies the extra xcodebuild flag. For example: ",(0,t.jsx)(i.code,{children:"-quiet"}),"."]}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_PROJECT_PATH"})}),(0,t.jsxs)(i.td,{children:["Specifies the project path. For example: ",(0,t.jsx)(i.code,{children:"./appcircle.xcodeproj"}),". If you filled in ",(0,t.jsx)(i.strong,{children:(0,t.jsx)(i.code,{children:"Configuration => Project or Workspace"})}),", this variable comes from ",(0,t.jsx)(i.a,{href:"/build/platform-build-guides/building-ios-applications#build-configuration",children:"Configuration"}),"."]}),(0,t.jsx)(i.td,{children:"Required"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_CERTIFICATES"})}),(0,t.jsx)(i.td,{children:"This variable specifies the path of the certificates to be signed."}),(0,t.jsx)(i.td,{children:"Required"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_BUNDLE_IDENTIFIERS"})}),(0,t.jsx)(i.td,{children:"This variable holds the Bundle Identifier of the application to be built."}),(0,t.jsx)(i.td,{children:"Required"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_PROVISIONING_PROFILES"})}),(0,t.jsx)(i.td,{children:"This variable specifies the path of provisioning profiles to be signed."}),(0,t.jsx)(i.td,{children:"Required"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_CONFIGURATION_NAME"})}),(0,t.jsxs)(i.td,{children:["You can build your project with any configuration you want. Specify the configuration as hard coded. Appcircle will add automatically this configuration to the xcodebuild command. For example; ",(0,t.jsx)(i.strong,{children:(0,t.jsx)(i.code,{children:"Debug"})}),"."]}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_COMPILER_INDEX_STORE_ENABLE"})}),(0,t.jsxs)(i.td,{children:["You can disable indexing during the build for faster build. Default value is ",(0,t.jsx)(i.code,{children:"No"}),"."]}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_METHOD_FOR_EXPORT"})}),(0,t.jsxs)(i.td,{children:["Describes how Xcode should export the archive. Available options are ",(0,t.jsx)(i.code,{children:"auto-detect"}),", ",(0,t.jsx)(i.code,{children:"app-store"}),", ",(0,t.jsx)(i.code,{children:"ad-hoc"}),", ",(0,t.jsx)(i.code,{children:"enterprise"}),", ",(0,t.jsx)(i.code,{children:"development"}),". The default is ",(0,t.jsx)(i.code,{children:"auto-detect"}),"."]}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_TEAMID_FOR_EXPORT"})}),(0,t.jsx)(i.td,{children:"The Developer Portal team to be use for this export. Defaults to the team used to build the archive."}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_COMPILE_BITCODE_FOR_EXPORT"})}),(0,t.jsxs)(i.td,{children:["For non-App Store exports, should Xcode re-compile the app from bitcode? Available options ",(0,t.jsx)(i.code,{children:"YES"}),", ",(0,t.jsx)(i.code,{children:"NO"}),"."]}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_UPLOAD_BITCODE_FOR_EXPORT"})}),(0,t.jsxs)(i.td,{children:["For App Store exports, should the package include a bitcode? Available options ",(0,t.jsx)(i.code,{children:"YES"}),", ",(0,t.jsx)(i.code,{children:"NO"}),"."]}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_UPLOAD_SYMBOLS_FOR_EXPORT"})}),(0,t.jsxs)(i.td,{children:["For App Store exports, should the package include symbols? Available options ",(0,t.jsx)(i.code,{children:"YES"}),", ",(0,t.jsx)(i.code,{children:"NO"}),"."]}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_ICLOUD_CONTAINER_ENVIRONMENT_FOR_EXPORT"})}),(0,t.jsxs)(i.td,{children:['For non-App Store exports, if the app is using CloudKit, this configures the "com.apple.developer.icloud-container-environment" entitlement. Available options ',(0,t.jsx)(i.code,{children:"Development"})," and ",(0,t.jsx)(i.code,{children:"Production"}),"."]}),(0,t.jsx)(i.td,{children:"Optional"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"$AC_DELETE_ARCHIVE"})}),(0,t.jsxs)(i.td,{children:["Delete ",(0,t.jsx)(i.code,{children:"build.xcarchive"})," file after creating ipa file."]}),(0,t.jsx)(i.td,{children:"Optional"})]})]})]}),"\n",(0,t.jsx)(i.h3,{id:"output-variables",children:"Output Variables"}),"\n",(0,t.jsx)(i.p,{children:"The output(s) resulting from the operation of this component are as follows:"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Variable Name"}),(0,t.jsx)(i.th,{children:"Description"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"AC_ARCHIVE_PATH"})}),(0,t.jsx)(i.td,{children:"This is the path created after retrieving the archive."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"AC_ARCHIVE_METADATA_PATH"})}),(0,t.jsx)(i.td,{children:"This is the path created after the metadata is generated."})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"AC_EXPORT_DIR"})}),(0,t.jsx)(i.td,{children:"This is the path created when exporting."})]})]})]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.p,{children:"To access the source code of this component, please use the following link:"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://github.com/appcircleio/appcircle-ios-build-sign-component",children:(0,t.jsx)(s,{url:"https://github.com/appcircleio/appcircle-ios-build-sign-component",title:"GitHub - appcircleio/appcircle-ios-build-sign-component",description:"Contribute to appcircleio/appcircle-ios-build-sign-component development by creating an account on GitHub.",image:"https://opengraph.githubassets.com/f9438792b1a68aa0a621fe734e56d0767e589763a5d3db5d8a50fca8fdd0989c/appcircleio/appcircle-ios-build-sign-component"})})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"faq",children:"FAQ"}),"\n",(0,t.jsx)(i.h3,{id:"adding-additional-command-to-xcodebuild-for-devices-step",children:"Adding Additional Command to Xcodebuild for Devices Step"}),"\n",(0,t.jsxs)(i.p,{children:["To address the need to add a new command after completing the ",(0,t.jsx)(i.code,{children:"xcodebuild"})," command in the ",(0,t.jsx)(i.strong,{children:"Xcodebuild for Devices"})," step, you can follow the following approach:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["Disable ",(0,t.jsx)(i.strong,{children:"Xcodebuild for Devices"})," step in your workflow."]}),"\n",(0,t.jsxs)(i.li,{children:['Add a new "Custom Script" component instead of ',(0,t.jsx)(i.strong,{children:"Xcodebuild for Devices"})," step."]}),"\n",(0,t.jsxs)(i.li,{children:["Go to Appcircle github profile and navigate to the ",(0,t.jsx)(i.a,{href:"https://github.com/appcircleio/appcircle-ios-build-sign-component",children:"repository"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Copy all code lines from the ",(0,t.jsx)(i.code,{children:"main.rb"})," file and paste them into the new ",(0,t.jsx)(i.strong,{children:"Custom Script"})," that you just added in your workflow."]}),"\n",(0,t.jsxs)(i.li,{children:["Change the name as ",(0,t.jsx)(i.strong,{children:"Custom Xcodebuild for Devices"})," for this custom script."]}),"\n",(0,t.jsxs)(i.li,{children:['Change "Execute With" picker as ',(0,t.jsx)(i.strong,{children:"Ruby"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["In the Ruby code, you can add the required codes to the end of the ",(0,t.jsx)(i.code,{children:"xcodebuild"})," command."]}),"\n"]}),"\n",(0,t.jsx)(i.admonition,{type:"caution",children:(0,t.jsxs)(i.p,{children:["Before running the script, some variables must be changed, and new variables must be added to the ",(0,t.jsx)(i.strong,{children:"Custom Script"}),"."]})}),"\n",(0,t.jsxs)(i.p,{children:["First, the ",(0,t.jsx)(i.code,{children:"output_path"})," global variable should be changed like below in global variables."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:'...\n## Other global variables\n...\n$output_path = env_has_key("AC_OUTPUT_DIR")\n'})}),"\n",(0,t.jsx)(i.p,{children:"After this, you need to add some parameters to your custom script. The parameters below should be added right after global variables."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:'AC_COMPILER_INDEX_STORE_ENABLE = "NO"\nAC_METHOD_FOR_EXPORT = "auto-detect"\nAC_DELETE_ARCHIVE = "false"\nAC_ARCHIVE_PATH = "AC_ARCHIVE_PATH"\nAC_ARCHIVE_METADATA_PATH = "AC_ARCHIVE_METADATA_PATH"\nAC_EXPORT_DIR = "AC_EXPORT_DIR"\n'})}),"\n",(0,t.jsxs)(i.p,{children:["In the next step for completing custom script settings, the ",(0,t.jsx)(i.code,{children:"AC_COMPILER_INDEX_STORE_ENABLE"})," parameter should be equaled with the following parameter:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:"$compiler_index_store_enable = AC_COMPILER_INDEX_STORE_ENABLE\n"})}),"\n",(0,t.jsx)(i.admonition,{type:"caution",children:(0,t.jsxs)(i.p,{children:["You should find the line with ",(0,t.jsx)(i.code,{children:"compiler_index_store_enable"})," and replace it with the above statement."]})}),"\n",(0,t.jsxs)(i.p,{children:["After these variables were set. There is an ",(0,t.jsx)(i.code,{children:"archive()"})," function in the Ruby code. First, find the function in the code."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:'## Archive Functions\ndef archive()\n  extname = File.extname($project_path)\n  command = "xcodebuild -scheme \\"#{$scheme}\\" clean archive -archivePath \\"#{$archive_path}\\" -derivedDataPath \\"#{$temporary_path}/DerivedData\\" -destination \\"generic/platform=iOS\\""\n  ...\n  ## Other code lines of archive() function\n  ...\n'})}),"\n",(0,t.jsxs)(i.p,{children:["At the end of this function, before running the ",(0,t.jsx)(i.code,{children:"run_command_simple()"})," function, you can add these lines to be able to add additional commands."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:'  ...\n  ## Other code lines of archive() function\n  ...\n  command.concat(" ")\n  command.concat("Write your command that you want to add here")\n  command.concat(" ")\n\n  run_command_simple(command)\nend\n'})}),"\n",(0,t.jsx)(i.h4,{id:"for-example",children:"For Example"}),"\n",(0,t.jsxs)(i.p,{children:["When you need to reduce the verbosity of the ",(0,t.jsx)(i.code,{children:"xcodebuild"})," logs, you can achieve this by appending the ",(0,t.jsx)(i.code,{children:"| grep -A 5 error:"})," command to the ",(0,t.jsx)(i.code,{children:"xcodebuild"})," command to decrease the clutter in the log file."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:'  ...\n  ## Other code lines of archive() function\n  ...\n  command.concat(" ")\n  command.concat(" | grep -A 5 error:")\n  command.concat(" ")\n\n  run_command_simple(command)\nend\n'})}),"\n",(0,t.jsxs)(i.p,{children:["Now, the ",(0,t.jsx)(i.code,{children:"run_command_simple()"})," function will execute your customized ",(0,t.jsx)(i.code,{children:"xcodebuild"})," command."]})]})}function p(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},69678:(e,i,s)=>{s.d(i,{A:()=>t});s(96540);var r=s(74848);function t(e){let{url:i,alt:s}=e;return(0,r.jsx)("img",{className:"screenshot",src:i,alt:s||"Screenshot"})}},28453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>d});var r=s(96540);const t={},n=r.createContext(t);function o(e){const i=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(n.Provider,{value:i},e.children)}}}]);