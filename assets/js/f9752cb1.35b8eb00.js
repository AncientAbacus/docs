"use strict";(self.webpackChunkappcircle_docusaurus=self.webpackChunkappcircle_docusaurus||[]).push([[4294],{51654:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"workflows/ios-specific-workflow-steps/cocoapods-install","title":"Cocoapods Install","description":"Master Cocoapods Install for managing dependencies in your project. Learn how to use the \'pod install\' command effectively.","source":"@site/docs/workflows/ios-specific-workflow-steps/cocoapods-install.md","sourceDirName":"workflows/ios-specific-workflow-steps","slug":"/workflows/ios-specific-workflow-steps/cocoapods-install","permalink":"/workflows/ios-specific-workflow-steps/cocoapods-install","draft":false,"unlisted":false,"editUrl":"https://github.com/appcircleio/appcircle-docusaurus/tree/master/docs/workflows/ios-specific-workflow-steps/cocoapods-install.md","tags":[{"inline":false,"label":"cocoapods","permalink":"/tags/cocoapods","description":"Description for cocoapods"},{"inline":false,"label":"install","permalink":"/tags/install","description":"Description for install"},{"inline":false,"label":"workflow","permalink":"/tags/workflow","description":"Description for workflow"},{"inline":false,"label":"step","permalink":"/tags/step","description":"Description for step"}],"version":"current","frontMatter":{"title":"Cocoapods Install","description":"Master Cocoapods Install for managing dependencies in your project. Learn how to use the \'pod install\' command effectively.","tags":["cocoapods","install","workflow","step"]},"sidebar":"mySidebar","previous":{"title":"CocoaPods Deintegrate","permalink":"/workflows/ios-specific-workflow-steps/cocoapods-deintegrate"},"next":{"title":"Convert Xcresult to HTML/XML","permalink":"/workflows/ios-specific-workflow-steps/convert-xcresult-to-xml-html"}}');var i=s(74848),n=s(28453),r=s(69678);const c={title:"Cocoapods Install",description:"Master Cocoapods Install for managing dependencies in your project. Learn how to use the 'pod install' command effectively.",tags:["cocoapods","install","workflow","step"]},l="Cocoapods Install",a={},d=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Input Variables",id:"input-variables",level:3}];function p(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components},{ExternalUrlRef:s}=o;return s||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ExternalUrlRef",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"cocoapods-install",children:"Cocoapods Install"})}),"\n",(0,i.jsxs)(o.p,{children:["Runs the ",(0,i.jsx)(o.a,{href:"https://cocoapods.org",children:"CocoaPods"})," install command for dependency management. This step installs all pod dependencies. Appcircle uses the ",(0,i.jsx)(o.code,{children:"pod install"})," command to install pods in the project. This command comes from the CocoaPods tool installed on the system. If a version is not specified for CocoaPods, this step will use the version of ",(0,i.jsx)(o.a,{href:"/infrastructure/ios-build-infrastructure#ios-build-agent-stacks",children:(0,i.jsx)(o.strong,{children:"CocoaPods installed"})})," on the system."]}),"\n",(0,i.jsx)(o.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(o.p,{children:["Before running the ",(0,i.jsx)(o.strong,{children:"Cocoapods Install"})," step, you must complete certain prerequisites, as detailed in the table below:"]}),"\n",(0,i.jsxs)(o.table,{children:[(0,i.jsx)(o.thead,{children:(0,i.jsxs)(o.tr,{children:[(0,i.jsx)(o.th,{children:"Prerequisite Workflow Step"}),(0,i.jsx)(o.th,{children:"Description"})]})}),(0,i.jsx)(o.tbody,{children:(0,i.jsxs)(o.tr,{children:[(0,i.jsx)(o.td,{children:(0,i.jsx)(o.a,{href:"/workflows/common-workflow-steps/git-clone",children:(0,i.jsx)(o.strong,{children:"Git Clone"})})}),(0,i.jsxs)(o.td,{children:["The repo needs to be cloned in order to start the CocoaPods installation process. After the clone, CocoaPods will be installed. After this step works, the variable ",(0,i.jsx)(o.code,{children:"$AC_REPOSITORY_DIR"})," will be created."]})]})})]}),"\n",(0,i.jsx)(r.A,{url:"https://cdn.appcircle.io/docs/assets/BE2588-pod_order.png"}),"\n",(0,i.jsx)(o.h3,{id:"input-variables",children:"Input Variables"}),"\n",(0,i.jsx)(o.p,{children:"This step contains some input variable(s). It needs these variable(s) to work. The table below gives explanation for this variable(s)."}),"\n",(0,i.jsx)(r.A,{url:"https://cdn.appcircle.io/docs/assets/BE2588-pod_version.png"}),"\n",(0,i.jsxs)(o.table,{children:[(0,i.jsx)(o.thead,{children:(0,i.jsxs)(o.tr,{children:[(0,i.jsx)(o.th,{children:"Variable Name"}),(0,i.jsx)(o.th,{children:"Description"}),(0,i.jsx)(o.th,{children:"Status"})]})}),(0,i.jsxs)(o.tbody,{children:[(0,i.jsxs)(o.tr,{children:[(0,i.jsx)(o.td,{children:(0,i.jsx)(o.code,{children:"$AC_PROJECT_PATH"})}),(0,i.jsxs)(o.td,{children:["Specifies the project path. For example: ",(0,i.jsx)(o.code,{children:"./appcircle.xcodeproj"}),". If you filled in ",(0,i.jsx)(o.strong,{children:(0,i.jsx)(o.code,{children:"Configuration => Project or Workspace"})}),", this variable comes from ",(0,i.jsx)(o.a,{href:"/build/build-process-management/build-profile-configuration",children:"Configuration"}),"."]}),(0,i.jsx)(o.td,{children:"Required"})]}),(0,i.jsxs)(o.tr,{children:[(0,i.jsx)(o.td,{children:(0,i.jsx)(o.code,{children:"$AC_REPOSITORY_DIR"})}),(0,i.jsxs)(o.td,{children:["Specifies the cloned repository directory. This path will be generated after the ",(0,i.jsx)(o.a,{href:"/workflows/common-workflow-steps/git-clone",children:(0,i.jsx)(o.strong,{children:"Git Clone"})})," step."]}),(0,i.jsx)(o.td,{children:"Required"})]}),(0,i.jsxs)(o.tr,{children:[(0,i.jsx)(o.td,{children:(0,i.jsx)(o.code,{children:"$AC_COCOAPODS_VERSION"})}),(0,i.jsx)(o.td,{children:"Specifies the CocoaPods version. If there is a specific version you want to use, give it here as hardcoded, and the system will automatically install the given version."}),(0,i.jsx)(o.td,{children:"Optional"})]})]})]}),"\n",(0,i.jsx)(o.admonition,{type:"info",children:(0,i.jsxs)(o.p,{children:["Please note that the ",(0,i.jsx)(o.strong,{children:"CocoaPods Install"})," step uses the default system ",(0,i.jsx)(o.a,{href:"/infrastructure/ios-build-infrastructure#ios-build-agent-stacks",children:(0,i.jsx)(o.strong,{children:"CocoaPods version"})}),". If you want to use a specific version, please enter it hardcoded in the CocoaPods Version parameter in the step."]})}),"\n",(0,i.jsx)(o.admonition,{type:"danger",children:(0,i.jsxs)(o.p,{children:["Remember, if the project extension is not ",(0,i.jsx)(o.strong,{children:".xcworkpace"}),", the pod install step will not work as expected. In the Configuration tab, make sure that the extension in the project path is ",(0,i.jsx)(o.strong,{children:".xcworkspace"}),"."]})}),"\n",(0,i.jsx)(o.hr,{}),"\n",(0,i.jsx)(o.p,{children:"To access the source code of this component, please use the following link:"}),"\n",(0,i.jsx)(o.p,{children:(0,i.jsx)(o.a,{href:"https://github.com/appcircleio/appcircle-cocoapods-component",children:(0,i.jsx)(s,{url:"https://github.com/appcircleio/appcircle-cocoapods-component",title:"GitHub - appcircleio/appcircle-cocoapods-component",description:"Contribute to appcircleio/appcircle-cocoapods-component development by creating an account on GitHub.",image:"https://opengraph.githubassets.com/2495ffca99ddc62fe5cf1b0ab8b6bd3f72da662a277fc5e4b0b9d1799616aa55/appcircleio/appcircle-cocoapods-component"})})})]})}function h(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},69678:(e,o,s)=>{s.d(o,{A:()=>i});s(96540);var t=s(74848);function i(e){let{url:o,alt:s}=e;return(0,t.jsx)("img",{className:"screenshot",src:o,alt:s||"Screenshot"})}},28453:(e,o,s)=>{s.d(o,{R:()=>r,x:()=>c});var t=s(96540);const i={},n=t.createContext(i);function r(e){const o=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(n.Provider,{value:o},e.children)}}}]);