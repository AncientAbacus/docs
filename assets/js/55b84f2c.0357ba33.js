"use strict";(self.webpackChunkappcircle_docusaurus=self.webpackChunkappcircle_docusaurus||[]).push([[34780],{73946:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>n,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"workflows/ios-specific-workflow-steps/convert-xcresult-to-xml-html","title":"Convert Xcresult to HTML/XML","description":"Easily convert Xcresult files to HTML/XML for enhanced readability and archiving. Simplify your development workflow with our effective tools","source":"@site/docs/workflows/ios-specific-workflow-steps/convert-xcresult-to-xml-html.md","sourceDirName":"workflows/ios-specific-workflow-steps","slug":"/workflows/ios-specific-workflow-steps/convert-xcresult-to-xml-html","permalink":"/workflows/ios-specific-workflow-steps/convert-xcresult-to-xml-html","draft":false,"unlisted":false,"editUrl":"https://github.com/appcircleio/appcircle-docusaurus/tree/master/docs/workflows/ios-specific-workflow-steps/convert-xcresult-to-xml-html.md","tags":[{"inline":false,"label":"xcresult","permalink":"/tags/xcresult","description":"Description for xcresult"},{"inline":false,"label":"convert","permalink":"/tags/convert","description":"Description for convert"},{"inline":false,"label":"html","permalink":"/tags/html","description":"Description for html"},{"inline":false,"label":"xml","permalink":"/tags/xml","description":"Description for xml"},{"inline":false,"label":"unit tests","permalink":"/tags/unit-tests","description":"Description for unit tests"},{"inline":false,"label":"UI tests","permalink":"/tags/ui-tests","description":"Description for UI tests"},{"inline":false,"label":"test reports","permalink":"/tags/test-reports","description":"Description for test reports"}],"version":"current","frontMatter":{"title":"Convert Xcresult to HTML/XML","description":"Easily convert Xcresult files to HTML/XML for enhanced readability and archiving. Simplify your development workflow with our effective tools","tags":["xcresult","convert","html","xml","unit tests","ui tests","test reports"]},"sidebar":"mySidebar","previous":{"title":"Cocoapods Install","permalink":"/workflows/ios-specific-workflow-steps/cocoapods-install"},"next":{"title":"Firebase Upload dSYM","permalink":"/workflows/ios-specific-workflow-steps/firebase-upload-dsym"}}');var i=s(74848),o=s(28453),l=s(69678);const n={title:"Convert Xcresult to HTML/XML",description:"Easily convert Xcresult files to HTML/XML for enhanced readability and archiving. Simplify your development workflow with our effective tools",tags:["xcresult","convert","html","xml","unit tests","ui tests","test reports"]},c="Convert Xcresult to HTML/XML",d={},a=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Input Variables",id:"input-variables",level:3},{value:"Output Variables",id:"output-variables",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components},{ExternalUrlRef:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ExternalUrlRef",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"convert-xcresult-to-htmlxml",children:"Convert Xcresult to HTML/XML"})}),"\n",(0,i.jsxs)(t.p,{children:["After the ",(0,i.jsx)(t.a,{href:"/workflows/ios-specific-workflow-steps/xcodebuild-for-unit-and-ui-test",children:(0,i.jsx)(t.strong,{children:"Xcodebuild for Unit and UI Tests"})})," step runs, it generates a ",(0,i.jsx)(t.code,{children:"test_result.xcresult"})," file. In specific cases, this test file must be converted to another format. The ",(0,i.jsx)(t.strong,{children:"Convert Xcresult to HTML/XML"})," step is used for converting this test file to ",(0,i.jsx)(t.code,{children:"HTML"})," and ",(0,i.jsx)(t.code,{children:"XML"})," formats."]}),"\n",(0,i.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.p,{children:["Before running the ",(0,i.jsx)(t.strong,{children:"Convert Xcresult to HTML/XML"})," step, you must complete certain prerequisites, as detailed in the table below:"]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Prerequisite Workflow Step"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/workflows/ios-specific-workflow-steps/xcodebuild-for-unit-and-ui-test",children:(0,i.jsx)(t.strong,{children:"Xcodebuild for Unit and UI Tests"})})}),(0,i.jsxs)(t.td,{children:["This step allows you to run unit and UI tests on your project. After this step runs, the related path, ",(0,i.jsx)(t.code,{children:"$AC_TEST_RESULT_PATH"})," will be generated automatically."]})]})})]}),"\n",(0,i.jsx)(t.admonition,{type:"caution",children:(0,i.jsxs)(t.p,{children:["Please note that if you do not run ",(0,i.jsx)(t.strong,{children:"Xcodebuild for Unit and UI Tests"})," before this step, the step will produce an error because there will be no test result file to convert."]})}),"\n",(0,i.jsx)(l.A,{url:"https://cdn.appcircle.io/docs/assets/BE2989-convertOrder.png"}),"\n",(0,i.jsx)(t.h3,{id:"input-variables",children:"Input Variables"}),"\n",(0,i.jsx)(t.p,{children:"This step contains some input variable(s). It needs these variable(s) to work. The table below gives explanation for this variable(s)."}),"\n",(0,i.jsx)(l.A,{url:"https://cdn.appcircle.io/docs/assets/BE2989-convertInput.png"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Variable Name"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Status"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"$AC_OUTPUT_DIR"})}),(0,i.jsx)(t.td,{children:"Specifies the path for outputs for generated artifacts. This path will be automatically defined. Do not change if it is not necessary."}),(0,i.jsx)(t.td,{children:"Required"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"$AC_TEST_RESULT_PATH"})}),(0,i.jsxs)(t.td,{children:["This directory will be used for converting from ",(0,i.jsx)(t.code,{children:"Xcresult"})," to ",(0,i.jsx)(t.code,{children:"HTML"})," or ",(0,i.jsx)(t.code,{children:"XML"}),"."]}),(0,i.jsx)(t.td,{children:"Required"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"$AC_CONVERT_FILE_NAME"})}),(0,i.jsx)(t.td,{children:"The name of the converted test result file. This will be the new filename for the result file."}),(0,i.jsx)(t.td,{children:"Required"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"$AC_CONVERT_TYPE"})}),(0,i.jsxs)(t.td,{children:["Specify the convert-type option. Which type should it be converted to? The options are ",(0,i.jsx)(t.code,{children:"XML"})," and ",(0,i.jsx)(t.code,{children:"HTML"}),". The default value is ",(0,i.jsx)(t.code,{children:"XML"}),"."]}),(0,i.jsx)(t.td,{children:"Required"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"$AC_INCLUDE_COVERAGE"})}),(0,i.jsxs)(t.td,{children:["If set to ",(0,i.jsx)(t.code,{children:"Yes"}),", it will include the coverage result in the converted file. The default value is ",(0,i.jsx)(t.code,{children:"No"}),"."]}),(0,i.jsx)(t.td,{children:"Required"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"output-variables",children:"Output Variables"}),"\n",(0,i.jsx)(t.p,{children:"The output(s) resulting from the operation of this component are as follows:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Variable Name"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"AC_CONVERTED_TEST_RESULT_PATH"})}),(0,i.jsxs)(t.td,{children:["Specifies the path where the converted result is stored. Users can access this path via this variable. Additionally, it will be available for download in the ",(0,i.jsx)(t.a,{href:"/workflows/common-workflow-steps/export-build-artifacts#download-exported-artifacts",children:(0,i.jsx)(t.strong,{children:"Download Artifact"})})," section."]})]})})]}),"\n",(0,i.jsx)(t.admonition,{type:"caution",children:(0,i.jsxs)(t.p,{children:["To view the converted test reports on the ",(0,i.jsx)(t.a,{href:"/workflows/common-workflow-steps/export-build-artifacts#download-exported-artifacts",children:(0,i.jsx)(t.strong,{children:"Download Artifacts"})})," page, please ensure that the ",(0,i.jsx)(t.a,{href:"/workflows/common-workflow-steps/export-build-artifacts",children:(0,i.jsx)(t.strong,{children:"Export Build Artifacts"})})," step is included in your workflow after this step."]})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:"To access the source code of this component, please use the following link:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/appcircleio/appcircle-ios-xcresult-convert-html-xml-component",children:(0,i.jsx)(s,{url:"https://github.com/appcircleio/appcircle-ios-xcresult-convert-html-xml-component",title:"GitHub - appcircleio/appcircle-ios-xcresult-convert-html-xml-component: This step converts the Unit/UI test result xcresult file to HTML or XML",description:"This step converts the Unit/UI test result xcresult file to HTML or XML - appcircleio/appcircle-ios-xcresult-convert-html-xml-component",image:"https://opengraph.githubassets.com/7569fb992bb5f53912f2ef6f80127548545200577c432dfb9a161441c8fca206/appcircleio/appcircle-ios-xcresult-convert-html-xml-component"})})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},69678:(e,t,s)=>{s.d(t,{A:()=>i});s(96540);var r=s(74848);function i(e){let{url:t,alt:s}=e;return(0,r.jsx)("img",{className:"screenshot",src:t,alt:s||"Screenshot"})}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>n});var r=s(96540);const i={},o=r.createContext(i);function l(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);