"use strict";(self.webpackChunkappcircle_docusaurus=self.webpackChunkappcircle_docusaurus||[]).push([[85525],{36609:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>t,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"workflows/common-workflow-steps/build-cache/how-to-share-file-between-build-profiles","title":"How to Share Files Between Build Profiles","description":"Learn to share files between build profiles efficiently. Enhance collaboration and streamline your development process with our guide.","source":"@site/docs/workflows/common-workflow-steps/build-cache/how-to-share-file-between-build-profiles.md","sourceDirName":"workflows/common-workflow-steps/build-cache","slug":"/workflows/common-workflow-steps/build-cache/how-to-share-file-between-build-profiles","permalink":"/workflows/common-workflow-steps/build-cache/how-to-share-file-between-build-profiles","draft":false,"unlisted":false,"editUrl":"https://github.com/appcircleio/appcircle-docusaurus/tree/master/docs/workflows/common-workflow-steps/build-cache/how-to-share-file-between-build-profiles.md","tags":[{"inline":false,"label":"pipelines","permalink":"/tags/pipelines","description":"Description for pipelines"},{"inline":false,"label":"data sharing","permalink":"/tags/data-sharing","description":"Description for data sharing"},{"inline":false,"label":"cache pull","permalink":"/tags/cache-pull","description":"Description for cache pull"},{"inline":false,"label":"cache push","permalink":"/tags/cache-push","description":"Description for cache push"},{"inline":false,"label":"efficiency","permalink":"/tags/efficiency","description":"Description for efficiency"}],"version":"current","frontMatter":{"title":"How to Share Files Between Build Profiles","description":"Learn to share files between build profiles efficiently. Enhance collaboration and streamline your development process with our guide.","tags":["pipelines","data sharing","cache pull","cache push","efficiency"]},"sidebar":"mySidebar","previous":{"title":"Cache Push","permalink":"/workflows/common-workflow-steps/build-cache/cache-push"},"next":{"title":"How to Share Files Between Pipelines","permalink":"/workflows/common-workflow-steps/build-cache/how-to-share-file-between-pipelines"}}');var o=i(74848),l=i(28453),r=i(69678);const c={title:"How to Share Files Between Build Profiles",description:"Learn to share files between build profiles efficiently. Enhance collaboration and streamline your development process with our guide.",tags:["pipelines","data sharing","cache pull","cache push","efficiency"]},t="How to Share Files Between Build Profiles",a={},h=[];function d(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"how-to-share-files-between-build-profiles",children:"How to Share Files Between Build Profiles"})}),"\n",(0,o.jsxs)(s.p,{children:["With the build cache structure provided by Appcircle, cache files can be shared between different ",(0,o.jsx)(s.a,{href:"/build/manage-the-connections/adding-a-build-profile/",children:(0,o.jsx)(s.strong,{children:"Build Profiles"})}),". This sharing of files enables the faster generation of packages in different Build Profiles, reducing build time. Below is a simple, step-by-step example of how you can achieve this."]}),"\n",(0,o.jsx)(s.admonition,{type:"info",children:(0,o.jsxs)(s.p,{children:["This simple example will use our ",(0,o.jsx)(s.a,{href:"https://cocoapods.org/",children:(0,o.jsx)(s.strong,{children:"CocoaPods"})})," files in different build profiles. If you intend to use a cache other than dependencies, please refer to the documentation for the ",(0,o.jsx)(s.a,{href:"/workflows/common-workflow-steps/build-cache/cache-push",children:(0,o.jsx)(s.strong,{children:"Cache Push"})})," component."]})}),"\n",(0,o.jsx)(s.admonition,{type:"caution",children:(0,o.jsxs)(s.p,{children:["To share cache between Build Profiles, the ",(0,o.jsx)(s.a,{href:"/workflows/common-workflow-steps/build-cache/cache-pull",children:(0,o.jsx)(s.strong,{children:"Cache Pull"})})," component must be added to the related pipeline."]})}),"\n",(0,o.jsx)(s.admonition,{type:"caution",children:(0,o.jsxs)(s.p,{children:["As an example, ",(0,o.jsx)(s.strong,{children:"master"})," and ",(0,o.jsx)(s.strong,{children:"development"})," branches were used, but you can apply the same operations to different branches."]})}),"\n",(0,o.jsxs)(s.admonition,{type:"danger",children:[(0,o.jsxs)(s.p,{children:["Please note that the organizational structure of Appcircle is designed in such a way as to prevent any ",(0,o.jsx)(s.strong,{children:"security vulnerabilities"}),". Consequently, exchanging files between organizations or sub-organizations ",(0,o.jsx)(s.strong,{children:"is not permitted"}),"."]}),(0,o.jsxs)(s.p,{children:["You can find detailed information about the Appcircle organizational structure in the documentation ",(0,o.jsx)(s.a,{href:"/account/my-organization",children:(0,o.jsx)(s.strong,{children:"here"})}),"."]})]}),"\n",(0,o.jsxs)(s.ol,{children:["\n",(0,o.jsxs)(s.li,{children:["Firstly, the caching of CocoaPods files is initiated in the ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team"})})," build profile. These files will subsequently be utilized in the ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team 2"})})," build profile. To accomplish this, the ",(0,o.jsx)(s.a,{href:"/workflows/common-workflow-steps/build-cache/cache-push",children:(0,o.jsx)(s.strong,{children:"Cache Push"})})," step should be incorporated into the workflow after the ",(0,o.jsx)(s.strong,{children:"CocoaPods Install"})," step in the initial build profile."]}),"\n"]}),"\n",(0,o.jsx)(r.A,{url:"https://cdn.appcircle.io/docs/assets/BE2911-buildCache.png"}),"\n",(0,o.jsxs)(s.ol,{start:"2",children:["\n",(0,o.jsxs)(s.li,{children:["After the successful completion of the build in the ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team"})})," build profile, the cached CocoaPods files are now available for use in the ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team 2"})})," build profile."]}),"\n"]}),"\n",(0,o.jsx)(r.A,{url:"https://cdn.appcircle.io/docs/assets/BE2911-cacheSuccess.png"}),"\n",(0,o.jsxs)(s.ol,{start:"3",children:["\n",(0,o.jsxs)(s.li,{children:["For the ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team 2"})})," build profile, the workflow steps need to be adjusted accordingly. To do this, the ",(0,o.jsx)(s.a,{href:"/workflows/common-workflow-steps/build-cache/cache-pull",children:(0,o.jsx)(s.strong,{children:"Cache Pull"})})," step should be added to the workflow before the ",(0,o.jsx)(s.strong,{children:"CocoaPods Install"})," step for the relevant branch."]}),"\n"]}),"\n",(0,o.jsx)(r.A,{url:"https://cdn.appcircle.io/docs/assets/BE2911-buildPull.png"}),"\n",(0,o.jsxs)(s.ol,{start:"4",children:["\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsxs)(s.p,{children:["When the ",(0,o.jsx)(s.a,{href:"/workflows/common-workflow-steps/build-cache/cache-pull",children:(0,o.jsx)(s.strong,{children:"Cache Pull"})})," step is entered, the ",(0,o.jsx)(s.strong,{children:"cache label"})," parameter is encountered, which is set as ",(0,o.jsx)(s.code,{children:"$AC_BUILD_PROFILE_ID/$AC_GIT_BRANCH/cache"})," by default. Here, the value of ",(0,o.jsx)(s.code,{children:"$AC_BUILD_PROFILE_ID"})," needs to be updated because a different profile is being used. To accomplish this, the build profile ID of the ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team"})})," where the files were cached will be used. This ID can be found directly at the ",(0,o.jsx)(s.strong,{children:"Appcircle URL"}),". For example, in the URL ",(0,o.jsx)(s.code,{children:"my.appcircle.io/build/detail/edc136b9-85fc-4e0a-aa7c-602375a84f64"}),", ",(0,o.jsx)(s.code,{children:"edc136b9-85fc-4e0a-aa7c-602375a84f64"})," represents the build profile ID. After setting the profile ID, the ",(0,o.jsx)(s.code,{children:"$AC_GIT_BRANCH"})," value that was cached in the previous profile, ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team"})}),", is specified, which is set to the ",(0,o.jsx)(s.strong,{children:"development"})," branch. Consequently, the ",(0,o.jsx)(s.strong,{children:"cache label"})," parameter will appear as ",(0,o.jsx)(s.code,{children:"edc136b9-85fc-4e0a-aa7c-602375a84f64/development/cache"}),"."]}),"\n",(0,o.jsx)(r.A,{url:"https://cdn.appcircle.io/docs/assets/BE2911-buildPullLabel.png"}),"\n"]}),"\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsxs)(s.p,{children:["After this parameter change, the CocoaPods dependencies that were cached in the ",(0,o.jsx)(s.strong,{children:"development"})," branch of the ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team"})})," build profile will be automatically pulled to the ",(0,o.jsx)(s.strong,{children:"master"})," branch of ",(0,o.jsx)(s.strong,{children:(0,o.jsx)(s.code,{children:"Appcircle Team 2"})})," and used directly in the pipeline."]}),"\n",(0,o.jsx)(r.A,{url:"https://cdn.appcircle.io/docs/assets/BE2911-buildCacheSuccess.png"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(s.admonition,{type:"danger",children:(0,o.jsxs)(s.p,{children:["When sharing cache files between ",(0,o.jsx)(s.strong,{children:"Build Profiles"}),", please make sure that you spell your build profile ID and branch names correctly and use the ",(0,o.jsx)(s.a,{href:"/workflows/common-workflow-steps/build-cache/cache-push",children:(0,o.jsx)(s.strong,{children:"Cache Push"})})," and ",(0,o.jsx)(s.a,{href:"/workflows/common-workflow-steps/build-cache/cache-pull",children:(0,o.jsx)(s.strong,{children:"Cache Pull"})})," steps correctly in each profile.\xa0"]})})]})}function p(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},69678:(e,s,i)=>{i.d(s,{A:()=>o});i(96540);var n=i(74848);function o(e){let{url:s,alt:i}=e;return(0,n.jsx)("img",{className:"screenshot",src:s,alt:i||"Screenshot"})}},28453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>c});var n=i(96540);const o={},l=n.createContext(o);function r(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);